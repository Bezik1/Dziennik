import React, { Component } from "react";
import Slider from "react-slick";
import axios from "axios";

import Student from "./Student";
import { isLogin } from "../../helpers/isLogin";
import Loading from "../Loading/Loading";

class Students extends Component {
  constructor(props) {
    isLogin();

    super(props);

    this.deleteStudent = this.deleteStudent.bind(this);

    this.state = { students: [], isLoading: true };
  }

  // Retrieve all students from database
  componentDidMount() {
    axios
      .get("https://dzienniczek-backend.herokuapp.com/students")
      .then((res) => {
        this.setState({ students: res.data });
      })
      .catch((error) => {
        window.location = "/error/500";
      })
      .then(() => this.setState({ isLoading: false }));
  }

  // deleteStudent - removes a student from the database
  deleteStudent(id) {
    axios
      .delete(`https://dzienniczek-backend.herokuapp.com/students/${id}`)
      .then((res) => console.log(res.data))
      .catch((err) => (window.location = "/error/500"));

    // Remove student element from DOM - _id refers to autogenerated id assigned by MongoDB
    this.setState({
      students: this.state.students.filter((el) => el._id !== id)
    });
  }

  page() {
    return (
      <div>
        <h1 className="text-center mx-auto text-light p-2">Uczniowie</h1>
        <Slider {...this.settings}>
          {this.state.students.map((student) => (
            <Student
              student={student}
              deleteStudent={this.deleteStudent}
              key={student._id}
            />
          ))}
        </Slider>
      </div>
    );
  }

  render() {
    //const isMobile = window.innerWidth >= 1000 ? true : false;
    this.settings = {
      arrows: false,
      dots: true,
      infinite: true,
      speed: 500,
      slidesToShow: 4,
      slidesToScroll: 1
    };
    return this.state.isLoading ? <Loading /> : this.page();
  }
}

export default Students;
